{"version":3,"sources":["components/FeedItem.js","lib/HexStringUtil.js","components/Profile.js","App.js","reportWebVitals.js","index.js"],"names":["FeedItem","props","type","lazy","content","startsWith","state","text","lazyText","iconColor","replace","HTMLReactParser","url","color","a","axios","get","response","contentType","headers","search","this","setState","data","lazyImage","loadAndSetFromURL","Card","fluid","raised","style","background","theme","Content","Image","wrapped","src","Description","formatHTMLText","extra","Label","attached","size","date","React","Component","stringToHex","string","split","map","c","charCodeAt","toString","padStart","join","Profile","feed","localStorage","getItem","JSON","parse","id","parseInt","chain","host","status","Array","isArray","result","filter","e","to","toLowerCase","input","v","i","findIndex","t","hash","hex","timeStamp","decodeURIComponent","substring","Date","reverse","setItem","stringify","Container","marginTop","Divider","hidden","Header","slice","Group","item","create","require","App","disableConnect","window","ethereum","ipfsHost","ipfs","connect","addModalOpen","ipfsModalOpen","postMessage","disableRefresh","profile","createRef","setTheme","isOnline","then","_","document","body","classList","remove","add","removeItem","request","method","accounts","chainId","current","loadData","catch","post","length","pin","cid","params","from","finally","className","Menu","fixed","compact","borderless","inverted","Item","header","icon","disabled","onClick","setTimeout","position","onClickToggleTheme","bind","name","open","onClickConnect","ref","Button","circular","onClickAdd","display","margin","bottom","right","zIndex","Modal","Input","maxLength","placeholder","onChange","value","Message","error","warning","Actions","negative","labelPosition","positive","onClickPostToMetamask","location","reload","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"2cAyHeA,E,kDAhHb,WAAYC,GAAQ,IAAD,sBAGjB,IAAIC,EAAO,OACPC,GAAO,EAJM,OACjB,cAAMF,IAKGA,MAAMG,QAAQC,WAAW,aAChCH,EAAO,QACPC,GAAO,GACE,EAAKF,MAAMG,QAAQC,WAAW,aACvCH,EAAO,OACPC,GAAO,GAGT,EAAKG,MAAQ,CACXC,MAAM,EACNJ,OACAD,OACAM,SAAU,aACVC,UAAW,QAnBI,E,kDAuBnB,SAAeL,GAKb,OAFAA,EAAUA,EAAQM,QADC,wBACT,uCAEH,8BAAMC,YAAgBP,O,sEAG/B,WAAwBQ,EAAKC,GAA7B,iBAAAC,EAAA,sEACuBC,IAAMC,IAAIJ,GADjC,OACMK,EADN,QAEMC,EAAcD,EAASE,QAAQ,iBACnBC,OAAO,eAAiB,EACtCC,KAAKC,SAAS,CACZd,SAAUS,EAASM,KACnBd,UAAWI,IAEJK,EAAYE,OAAO,UAAY,EACxCC,KAAKC,SAAS,CACZE,UAAWZ,EACXH,UAAWI,IAGbQ,KAAKC,SAAS,CACZd,SAAU,yBACVC,UAAWI,IAhBjB,gD,+HAqBA,4BAAAC,EAAA,0DACMO,KAAKf,MAAMH,KADjB,sBAEYkB,KAAKf,MAAMJ,KAFvB,OAIW,UAJX,OAOW,SAPX,sCAKcmB,KAAKI,kBAAkBJ,KAAKpB,MAAMG,QAAS,OALzD,iDAQYQ,EARZ,UAvDmB,yBAuDnB,OAQoCS,KAAKpB,MAAMG,QAAQM,QAC7C,UACA,KAVV,UAYcW,KAAKI,kBAAkBb,EAAK,QAZ1C,qF,0EAkBA,WACE,OACE,eAACc,EAAA,EAAD,CACEC,OAAK,EACLC,QAAM,EACNC,MAAO,CACLC,WAAiC,SAArBT,KAAKpB,MAAM8B,MAAmB,QAAU,SAJxD,UAOE,cAACL,EAAA,EAAKM,QAAN,UACGX,KAAKf,MAAMkB,UACV,cAACS,EAAA,EAAD,CAAON,OAAK,EAACO,SAAO,EAACC,IAAKd,KAAKf,MAAMkB,YAErC,cAACE,EAAA,EAAKU,YAAN,CACEP,MAAO,CAAEhB,MAA4B,SAArBQ,KAAKpB,MAAM8B,MAAmB,QAAU,SAD1D,SAGGV,KAAKgB,eACJhB,KAAKf,MAAMH,KAAOkB,KAAKf,MAAME,SAAWa,KAAKpB,MAAMG,aAK3D,eAACsB,EAAA,EAAKM,QAAN,CACEM,OAAK,EACLT,MAAO,CAAEhB,MAA4B,SAArBQ,KAAKpB,MAAM8B,MAAmB,QAAU,SAF1D,UAIGV,KAAKf,MAAMH,MACV,eAACoC,EAAA,EAAD,CACEC,SAAS,eACT3B,MAAOQ,KAAKf,MAAMG,UAClBgC,KAAK,OAHP,UAKGpB,KAAKf,MAAMJ,KAAM,OAGrBmB,KAAKpB,MAAMyC,e,GA1GCC,IAAMC,WCRtB,SAASC,EAAYC,GAC1B,OAAOA,EACJC,MAAM,IACNC,KAAI,SAACC,GAAD,OAAOA,EAAEC,WAAW,GAAGC,SAAS,IAAIC,SAAS,EAAG,QACpDC,KAAK,I,ICsFKC,E,kDAnFb,WAAYrD,GAAQ,IAAD,sBACjB,cAAMA,GAEN,IAAIsD,EAAOC,aAAaC,QAAQ,QAHf,OAKfF,EADEA,EACKG,KAAKC,MAAMJ,GAEX,GAGT,EAAKjD,MAAQ,CACXiD,QAXe,E,mFAenB,WAAeK,GAAf,4BAAA9C,EAAA,yDACO8C,EADP,sDAKUC,SAASxC,KAAKpB,MAAM6D,OAL9B,OAOS,QAPT,OAYS,MAZT,6BAQMC,EAAO,sCARb,mCAaMA,EAAO,8BAbb,+EAoBuBhD,IAAMC,IAAN,UAChB+C,EADgB,qDACiCH,EADjC,6CApBvB,WAoBM3C,EApBN,OA0BsB,OAFhBM,EAAON,EAASM,MAEXyC,QAAmBC,MAAMC,QAAQ3C,EAAK4C,QA1BjD,mDA4BMZ,EAAOhC,EAAK4C,OACbC,QAAO,SAACC,GAAD,OAAOA,EAAEC,GAAGC,gBAAkB,EAAKtE,MAAM2D,GAAGW,iBACnDH,QAAO,SAACC,GAAD,MAAmB,OAAZA,EAAEG,SAChBJ,QAAO,SAACK,EAAGC,EAAG5D,GAAP,OAAaA,EAAE6D,WAAU,SAACC,GAAD,OAAOA,EAAEC,OAASJ,EAAEI,UAAUH,KAC9D1B,KAAI,gBD/CiB8B,EC+CdD,EAAH,EAAGA,KAAML,EAAT,EAASA,MAAOO,EAAhB,EAAgBA,UAAhB,MAAiC,CACpCF,OACAzE,SDjDoB0E,ECiDCN,EDhDpBQ,mBACLF,EACGpE,QAAQ,OAAQ,IAChBA,QAAQ,eAAgB,OACxBuE,UAAU,KC6CTvC,KAAM,IAAIwC,KAA2B,IAAtBrB,SAASkB,IAAmB5B,WAAW8B,UAAU,EAAG,QAEpEE,UAEH9D,KAAKC,SAAS,CAAEiC,SAChBC,aAAa4B,QAAQ,OAAQ1B,KAAK2B,UAAU9B,IAxC9C,iD,2EA2CA,WAAU,IAAD,OACP,OACE,eAAC+B,EAAA,EAAD,CAAWzD,MAAO,CAAE0D,UAAW,SAA/B,UACE,cAACC,EAAA,EAAD,CAASC,QAAM,IACdpE,KAAKpB,MAAM2D,IACV,cAAC8B,EAAA,EAAD,CACE7D,MAAO,CAAEhB,MAA4B,SAArBQ,KAAKpB,MAAM8B,MAAmB,QAAU,SACxD3B,QAAO,kBAAaiB,KAAKpB,MAAM2D,GAAGqB,UAChC,EACA,GAFK,cAGA5D,KAAKpB,MAAM2D,GAAG+B,OAAO,GAHrB,kBAGiCtE,KAAKpB,MAAM6D,SAGvD,cAAC0B,EAAA,EAAD,CAASC,QAAM,IACf,cAAC/D,EAAA,EAAKkE,MAAN,UACGvE,KAAKpB,MAAM2D,IACVvC,KAAKf,MAAMiD,KAAKP,KAAI,SAAC6C,GAAD,OAClB,cAAC,EAAD,2BAA8BA,GAA9B,IAAoC9D,MAAO,EAAK9B,MAAM8B,QAAvC8D,EAAKhB,kB,GA5EZlC,IAAMC,WCFpBkD,EAAWC,EAAQ,KAAnBD,OAmROE,E,kDAhRb,aAAe,IAAD,sBACZ,eAEA,IAAIC,EAA4C,qBAApBC,OAAOC,SAC7BvC,EAAKJ,aAAaC,QAAQ,OAAS,GACnCK,EAAQN,aAAaC,QAAQ,UAAY,KACzC2C,EAAW5C,aAAaC,QAAQ,SAAW,wBANrC,OAOZ,EAAK4C,KAAOP,EAAOM,GAEnB,EAAK9F,MAAQ,CACX8F,WACArE,MAAOyB,aAAaC,QAAQ,UAAY,QACxC6C,UAAS1C,EACTqC,iBACArC,KACAE,QACAyC,cAAc,EACdC,eAAe,EACfC,YAAa,GACbC,gBAAgB,EAChBL,MAAM,GAGR,EAAKM,QAAUhE,IAAMiE,YAvBT,E,qDA0Bd,WAAqB,IAAD,OAClBvF,KAAKwF,SAASxF,KAAKf,MAAMyB,OAEzBV,KAAKgF,KAAKS,WAAWC,MAAK,SAACC,GACzB,EAAK1F,SAAS,CAAE+E,MAAM,S,gCAI1B,WAC2B,SAArBhF,KAAKf,MAAMyB,MACbV,KAAKwF,SAAS,SAEdxF,KAAKwF,SAAS,U,sBAIlB,SAAS9E,GACPV,KAAKC,SAAS,CAAES,UAChByB,aAAa4B,QAAQ,QAASrD,GAC9BkF,SAASC,KAAKC,UAAUC,OAAO,QAC/BH,SAASC,KAAKC,UAAUC,OAAO,SAC/BH,SAASC,KAAKC,UAAUE,IAAItF,K,4BAG9B,WAAkB,IAAD,OACXV,KAAKf,MAAMgG,SACbjF,KAAKC,SAAS,CAAEgF,SAAS,EAAO1C,GAAI,KACpCJ,aAAa8D,WAAW,QACxB9D,aAAa8D,WAAW,OAExBpB,OAAOC,SACJoB,QAAQ,CAAEC,OAAQ,wBAClBT,MAAK,SAACU,GACL,IAAI3D,EAAQD,SAASqC,OAAOC,SAASuB,SACjC9D,EAAK6D,EAAS,GAClBjE,aAAa4B,QAAQ,KAAMxB,GAC3BJ,aAAa4B,QAAQ,QAAStB,GAC9B,EAAKxC,SAAS,CAAEgF,SAAS,EAAM1C,KAAIE,UACnC,EAAK6C,QAAQgB,QAAQC,SAAShE,MAE/BiE,OAAM,SAACb,GACN,EAAK1F,SAAS,CAAEgF,SAAS,EAAO1C,GAAI,KACpCJ,aAAa8D,WAAW,QACxB9D,aAAa8D,WAAW,W,wBAKhC,WACEjG,KAAKC,SAAS,CAAEiF,cAAc,EAAME,YAAa,O,0EAGnD,yCAAA3F,EAAA,4DACMgH,EAAOzG,KAAKf,MAAMmG,aAIbsB,OAAS,KAAOD,EAAKzH,WAAW,YAL3C,gCAM0BgB,KAAKgF,KAAKgB,IAAIS,EAAM,CAAEE,KAAK,IANrD,gBAMYC,EANZ,EAMYA,IACRnD,EAAMjC,EAAY,UAAD,OAAWoF,EAAI9E,aAPpC,uBASI2B,EAAMjC,EAAYiF,GATtB,QAYE5B,OAAOC,SACJoB,QAAQ,CACPC,OAAQ,sBACRU,OAAQ,CACN,CACE5D,GAAIjD,KAAKf,MAAMsD,GACfuE,KAAM9G,KAAKf,MAAMsD,GACjBrC,KAAK,KAAD,OAAOuD,OAIhBiC,MAAK,SAACC,OACNa,OAAM,SAACb,OACPoB,SAAQ,SAACpB,GAAD,OAAO,EAAK1F,SAAS,CAAEiF,cAAc,EAAOE,YAAa,QAzBtE,iD,0EA4BA,WAAU,IAAD,OACP,OACE,sBAAK4B,UAAWhH,KAAKf,MAAMyB,MAA3B,UACE,eAACuG,EAAA,EAAD,CACEC,MAAM,MACNC,SAAO,EACPC,YAAU,EACVC,SAA+B,SAArBrH,KAAKf,MAAMyB,MAJvB,UAME,cAACuG,EAAA,EAAKK,KAAN,CAAWC,QAAM,EAACxI,QAAQ,YACzBiB,KAAKf,MAAMsD,IACV,cAAC0E,EAAA,EAAKK,KAAN,CACEE,KAAK,UACLC,SAAUzH,KAAKf,MAAMoG,eACrBqC,QAAS,WACP,EAAKpC,QAAQgB,QAAQC,SAAS,EAAKtH,MAAMsD,IACzC,EAAKtC,SAAS,CAAEoF,gBAAgB,IAChCsC,YACE,kBAAM,EAAK1H,SAAS,CAAEoF,gBAAgB,MACtC,QAMR,cAAC4B,EAAA,EAAKK,KAAN,CACEM,SAAS,QACTJ,KAAK,QACLE,QAAS,kBAAM,EAAKzH,SAAS,CAAEkF,eAAe,OAEhD,cAAC8B,EAAA,EAAKK,KAAN,CACEE,KAA2B,SAArBxH,KAAKf,MAAMyB,MAAmB,OAAS,MAC7CgH,QAAS1H,KAAK6H,mBAAmBC,KAAK9H,QAExC,cAACiH,EAAA,EAAKK,KAAN,CACES,KACE/H,KAAKf,MAAM2F,eACP,mBACA5E,KAAKf,MAAMgG,QACX,aACA,UAENuC,KAAMxH,KAAKf,MAAM2F,eAAiB,UAAY,QAC9C8C,QACE1H,KAAKf,MAAM2F,eACP,WACEC,OAAOmD,KAAK,sBAAuB,WAErChI,KAAKiI,eAAeH,KAAK9H,WAInC,cAAC,EAAD,CACEkI,IAAKlI,KAAKsF,QACV5E,MAAOV,KAAKf,MAAMyB,MAClB6B,GAAIvC,KAAKf,MAAMsD,GACfE,MAAOzC,KAAKf,MAAMwD,QAEpB,cAAC0F,EAAA,EAAD,CACEC,UAAQ,EACRZ,KAAK,MACLpG,KAAK,MACLsG,QAAS1H,KAAKqI,WAAWP,KAAK9H,MAC9BQ,MAAO,CACL8H,QAAStI,KAAKf,MAAMgG,QAAU,QAAU,OACxC2C,SAAU,QACVW,OAAQ,MACRC,OAAQ,MACRC,MAAO,MACPC,OAAQ,KAGZ,eAACC,EAAA,EAAD,CAAOX,KAAMhI,KAAKf,MAAMiG,aAAxB,UACE,cAACyD,EAAA,EAAMtE,OAAP,iCACA,cAACsE,EAAA,EAAMhI,QAAP,UACE,eAACgI,EAAA,EAAM5H,YAAP,WACE,cAAC6H,EAAA,EAAD,CACEC,UAAW7I,KAAKf,MAAM+F,KAAO,IAAM,GACnC1E,OAAK,EACLwI,YAAY,sBACZC,SAAU,SAAC/F,EAAD,OAAMgG,EAAN,EAAMA,MAAN,OACR,EAAK/I,SAAS,CAAEmF,YAAa4D,QAG/BhJ,KAAKf,MAAM+F,MACX,cAACiE,EAAA,EAAD,CACEC,OAAK,EACLnK,QAAQ,qEAGZ,eAACkK,EAAA,EAAD,CAASE,SAAO,EAAhB,UACE,uMAKA,iQASN,eAACR,EAAA,EAAMS,QAAP,WACE,cAACjB,EAAA,EAAD,CACEkB,UAAQ,EACRtK,QAAQ,SACR2I,QAAS,kBACP,EAAKzH,SAAS,CAAEiF,cAAc,EAAOE,YAAa,QAGtD,cAAC+C,EAAA,EAAD,CACEpJ,QAAQ,OACRuK,cAAc,QACd9B,KAAK,YACL+B,UAAQ,EACR9B,UAAUzH,KAAKf,MAAMmG,YACrBsC,QAAS1H,KAAKwJ,sBAAsB1B,KAAK9H,cAI/C,eAAC2I,EAAA,EAAD,CAAOX,KAAMhI,KAAKf,MAAMkG,cAAxB,UACE,cAACwD,EAAA,EAAMtE,OAAP,4BACA,cAACsE,EAAA,EAAMhI,QAAP,UACE,cAACgI,EAAA,EAAM5H,YAAP,UACE,cAAC6H,EAAA,EAAD,CACEtI,OAAK,EACL0I,MAAOhJ,KAAKf,MAAM8F,SAClBgE,SAAU,SAAC/F,EAAD,OAAMgG,EAAN,EAAMA,MAAN,OACR,EAAK/I,SAAS,CAAE8E,SAAUiE,WAKlC,eAACL,EAAA,EAAMS,QAAP,WACE,cAACjB,EAAA,EAAD,CACEkB,UAAQ,EACRtK,QAAQ,SACR2I,QAAS,kBAAM,EAAKzH,SAAS,CAAEkF,eAAe,OAEhD,cAACgD,EAAA,EAAD,CACEV,UACEzH,KAAKf,MAAM8F,WACV/E,KAAKf,MAAM8F,SAAS/F,WAAW,aAC9BgB,KAAKf,MAAM8F,SAAS/F,WAAW,YAInCD,QAAQ,OACRuK,cAAc,QACd9B,KAAK,YACL+B,UAAQ,EACR7B,QAAS,WACPvF,aAAa4B,QAAQ,OAAQ,EAAK9E,MAAM8F,UACxCF,OAAO4E,SAASC,yB,GAvQdpI,IAAMC,WCMToI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBnE,MAAK,YAAkD,IAA/CoE,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFzE,SAAS0E,eAAe,SAM1BX,M","file":"static/js/main.4ac9d79d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Card, Image, Label } from \"semantic-ui-react\";\r\nimport axios from \"axios\";\r\nimport HTMLReactParser from \"html-react-parser\";\r\n\r\n\r\nconst IPFS_GATEWAY = \"https://ipfs.io/ipfs/\";\r\n\r\nclass FeedItem extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    let type = \"text\";\r\n    let lazy = false;\r\n\r\n    if (this.props.content.startsWith(\"https://\")) {\r\n      type = \"https\";\r\n      lazy = true;\r\n    } else if (this.props.content.startsWith(\"ipfs://\")) {\r\n      type = \"ipfs\";\r\n      lazy = true;\r\n    }\r\n\r\n    this.state = {\r\n      text: true,\r\n      lazy,\r\n      type,\r\n      lazyText: \"loading...\",\r\n      iconColor: \"grey\",\r\n    };\r\n  }\r\n\r\n  formatHTMLText(content) {\r\n    // enable links\r\n    const linksRegex = /(https?:\\/\\/[^\\s]+)/gm;\r\n    content = content.replace(linksRegex, `<a href=\"$1\" target=\"_blank\">$1</a>`);\r\n\r\n    return <div>{HTMLReactParser(content)}</div>;\r\n  }\r\n\r\n  async loadAndSetFromURL(url, color) {\r\n    let response = await axios.get(url);\r\n    let contentType = response.headers[\"content-type\"];\r\n    if (contentType.search(\"text/plain\") >= 0) {\r\n      this.setState({\r\n        lazyText: response.data,\r\n        iconColor: color,\r\n      });\r\n    } else if (contentType.search(\"image\") >= 0) {\r\n      this.setState({\r\n        lazyImage: url,\r\n        iconColor: color,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        lazyText: \"Content not supported.\",\r\n        iconColor: color,\r\n      });\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.state.lazy) {\r\n      switch (this.state.type) {\r\n        default:\r\n        case \"https\":\r\n          await this.loadAndSetFromURL(this.props.content, \"red\");\r\n          break;\r\n        case \"ipfs\":\r\n          let url = `${IPFS_GATEWAY}${this.props.content.replace(\r\n            \"ipfs://\",\r\n            \"\"\r\n          )}`;\r\n          await this.loadAndSetFromURL(url, \"teal\");\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Card\r\n        fluid\r\n        raised\r\n        style={{\r\n          background: this.props.theme === \"dark\" ? \"black\" : \"white\",\r\n        }}\r\n      >\r\n        <Card.Content>\r\n          {this.state.lazyImage ? (\r\n            <Image fluid wrapped src={this.state.lazyImage} />\r\n          ) : (\r\n            <Card.Description\r\n              style={{ color: this.props.theme === \"dark\" ? \"white\" : \"black\" }}\r\n            >\r\n              {this.formatHTMLText(\r\n                this.state.lazy ? this.state.lazyText : this.props.content\r\n              )}\r\n            </Card.Description>\r\n          )}\r\n        </Card.Content>\r\n        <Card.Content\r\n          extra\r\n          style={{ color: this.props.theme === \"dark\" ? \"white\" : \"black\" }}\r\n        >\r\n          {this.state.lazy && (\r\n            <Label\r\n              attached=\"bottom right\"\r\n              color={this.state.iconColor}\r\n              size=\"tiny\"\r\n            >\r\n              {this.state.type}{\" \"}\r\n            </Label>\r\n          )}\r\n          {this.props.date}\r\n        </Card.Content>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FeedItem;\r\n","export function stringToHex(string) {\r\n  return string\r\n    .split(\"\")\r\n    .map((c) => c.charCodeAt(0).toString(16).padStart(2, \"0\"))\r\n    .join(\"\");\r\n}\r\n\r\nexport function hexToString(hex) {\r\n  return decodeURIComponent(\r\n    hex\r\n      .replace(/\\s+/g, \"\")\r\n      .replace(/[0-9a-f]{2}/g, \"%$&\")\r\n      .substring(2)\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Card, Container, Divider, Header } from \"semantic-ui-react\";\r\nimport axios from \"axios\";\r\nimport FeedItem from \"./FeedItem\";\r\nimport { hexToString } from \"../lib/HexStringUtil\";\r\n\r\nclass Profile extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    let feed = localStorage.getItem(\"feed\");\r\n    if (feed) {\r\n      feed = JSON.parse(feed);\r\n    } else {\r\n      feed = [];\r\n    }\r\n\r\n    this.state = {\r\n      feed,\r\n    };\r\n  }\r\n\r\n  async loadData(id) {\r\n    if (!id) return;\r\n\r\n    let host;\r\n\r\n    switch (parseInt(this.props.chain)) {\r\n      // Polygon Mumbai Testnet\r\n      case 80001:\r\n        host = \"https://api-testnet.polygonscan.com\";\r\n        break;\r\n\r\n      // Polygon Mainnet\r\n      case 137:\r\n        host = \"https://api.polygonscan.com\";\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n\r\n    let response = await axios.get(\r\n      `${host}/api?module=account&action=txlist&address=${id}&startblock=1&endblock=99999999&sort=asc`\r\n    );\r\n\r\n    let data = response.data;\r\n\r\n    if (data.status !== \"1\" || !Array.isArray(data.result)) return;\r\n\r\n    let feed = data.result\r\n      .filter((e) => e.to.toLowerCase() === this.props.id.toLowerCase())\r\n      .filter((e) => e.input !== \"0x\")\r\n      .filter((v, i, a) => a.findIndex((t) => t.hash === v.hash) === i)\r\n      .map(({ hash, input, timeStamp }) => ({\r\n        hash,\r\n        content: hexToString(input),\r\n        date: new Date(parseInt(timeStamp) * 1000).toString().substring(0, 24),\r\n      }))\r\n      .reverse();\r\n\r\n    this.setState({ feed });\r\n    localStorage.setItem(\"feed\", JSON.stringify(feed));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container style={{ marginTop: \"2.5em\" }}>\r\n        <Divider hidden />\r\n        {this.props.id && (\r\n          <Header\r\n            style={{ color: this.props.theme === \"dark\" ? \"white\" : \"black\" }}\r\n            content={`Address ${this.props.id.substring(\r\n              0,\r\n              6\r\n            )}...${this.props.id.slice(-4)} Chain ${this.props.chain}`}\r\n          />\r\n        )}\r\n        <Divider hidden />\r\n        <Card.Group>\r\n          {this.props.id &&\r\n            this.state.feed.map((item) => (\r\n              <FeedItem key={item.hash} {...item} theme={this.props.theme} />\r\n            ))}\r\n        </Card.Group>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport { Button, Input, Menu, Message, Modal } from \"semantic-ui-react\";\r\nimport Profile from \"./components/Profile\";\r\nimport { stringToHex } from \"./lib/HexStringUtil\";\r\nconst { create } = require(\"ipfs-http-client\");\r\n\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    let disableConnect = typeof window.ethereum === \"undefined\";\r\n    const id = localStorage.getItem(\"id\") || \"\";\r\n    const chain = localStorage.getItem(\"chain\") || null;\r\n    const ipfsHost = localStorage.getItem(\"ipfs\") || \"http://localhost:5001\";\r\n    this.ipfs = create(ipfsHost);\r\n\r\n    this.state = {\r\n      ipfsHost,\r\n      theme: localStorage.getItem(\"theme\") || \"light\",\r\n      connect: id ? true : false,\r\n      disableConnect,\r\n      id,\r\n      chain,\r\n      addModalOpen: false,\r\n      ipfsModalOpen: false,\r\n      postMessage: \"\",\r\n      disableRefresh: false,\r\n      ipfs: false,\r\n    };\r\n\r\n    this.profile = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setTheme(this.state.theme);\r\n\r\n    this.ipfs.isOnline().then((_) => {\r\n      this.setState({ ipfs: true });\r\n    });\r\n  }\r\n\r\n  onClickToggleTheme() {\r\n    if (this.state.theme === \"dark\") {\r\n      this.setTheme(\"light\");\r\n    } else {\r\n      this.setTheme(\"dark\");\r\n    }\r\n  }\r\n\r\n  setTheme(theme) {\r\n    this.setState({ theme });\r\n    localStorage.setItem(\"theme\", theme);\r\n    document.body.classList.remove(\"dark\");\r\n    document.body.classList.remove(\"light\");\r\n    document.body.classList.add(theme);\r\n  }\r\n\r\n  onClickConnect() {\r\n    if (this.state.connect) {\r\n      this.setState({ connect: false, id: \"\" });\r\n      localStorage.removeItem(\"feed\");\r\n      localStorage.removeItem(\"id\");\r\n    } else {\r\n      window.ethereum\r\n        .request({ method: \"eth_requestAccounts\" })\r\n        .then((accounts) => {\r\n          let chain = parseInt(window.ethereum.chainId);\r\n          let id = accounts[0];\r\n          localStorage.setItem(\"id\", id);\r\n          localStorage.setItem(\"chain\", chain);\r\n          this.setState({ connect: true, id, chain });\r\n          this.profile.current.loadData(id);\r\n        })\r\n        .catch((_) => {\r\n          this.setState({ connect: false, id: \"\" });\r\n          localStorage.removeItem(\"feed\");\r\n          localStorage.removeItem(\"id\");\r\n        });\r\n    }\r\n  }\r\n\r\n  onClickAdd() {\r\n    this.setState({ addModalOpen: true, postMessage: \"\" });\r\n  }\r\n\r\n  async onClickPostToMetamask() {\r\n    let post = this.state.postMessage;\r\n    let hex;\r\n\r\n    // Put long posts on ipfs\r\n    if (post.length > 60 && !post.startsWith(\"https://\")) {\r\n      const { cid } = await this.ipfs.add(post, { pin: true });\r\n      hex = stringToHex(`ipfs://${cid.toString()}`);\r\n    } else {\r\n      hex = stringToHex(post);\r\n    }\r\n\r\n    window.ethereum\r\n      .request({\r\n        method: \"eth_sendTransaction\",\r\n        params: [\r\n          {\r\n            to: this.state.id,\r\n            from: this.state.id,\r\n            data: `0x${hex}`,\r\n          },\r\n        ],\r\n      })\r\n      .then((_) => {})\r\n      .catch((_) => {})\r\n      .finally((_) => this.setState({ addModalOpen: false, postMessage: \"\" }));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={this.state.theme}>\r\n        <Menu\r\n          fixed=\"top\"\r\n          compact\r\n          borderless\r\n          inverted={this.state.theme === \"dark\"}\r\n        >\r\n          <Menu.Item header content=\"Profile\" />\r\n          {this.state.id && (\r\n            <Menu.Item\r\n              icon=\"refresh\"\r\n              disabled={this.state.disableRefresh}\r\n              onClick={() => {\r\n                this.profile.current.loadData(this.state.id);\r\n                this.setState({ disableRefresh: true });\r\n                setTimeout(\r\n                  () => this.setState({ disableRefresh: false }),\r\n                  2000\r\n                );\r\n              }}\r\n            />\r\n          )}\r\n\r\n          <Menu.Item\r\n            position=\"right\"\r\n            icon=\"cubes\"\r\n            onClick={() => this.setState({ ipfsModalOpen: true })}\r\n          />\r\n          <Menu.Item\r\n            icon={this.state.theme === \"dark\" ? \"moon\" : \"sun\"}\r\n            onClick={this.onClickToggleTheme.bind(this)}\r\n          />\r\n          <Menu.Item\r\n            name={\r\n              this.state.disableConnect\r\n                ? \"Install Metamask\"\r\n                : this.state.connect\r\n                ? \"Disconnect\"\r\n                : \"Connect\"\r\n            }\r\n            icon={this.state.disableConnect ? \"warning\" : \"power\"}\r\n            onClick={\r\n              this.state.disableConnect\r\n                ? () => {\r\n                    window.open(\"https://metamask.io\", \"_blank\");\r\n                  }\r\n                : this.onClickConnect.bind(this)\r\n            }\r\n          />\r\n        </Menu>\r\n        <Profile\r\n          ref={this.profile}\r\n          theme={this.state.theme}\r\n          id={this.state.id}\r\n          chain={this.state.chain}\r\n        />\r\n        <Button\r\n          circular\r\n          icon=\"add\"\r\n          size=\"big\"\r\n          onClick={this.onClickAdd.bind(this)}\r\n          style={{\r\n            display: this.state.connect ? \"block\" : \"none\",\r\n            position: \"fixed\",\r\n            margin: \"2em\",\r\n            bottom: \"0px\",\r\n            right: \"0px\",\r\n            zIndex: 6,\r\n          }}\r\n        />\r\n        <Modal open={this.state.addModalOpen}>\r\n          <Modal.Header>Post a new Message</Modal.Header>\r\n          <Modal.Content>\r\n            <Modal.Description>\r\n              <Input\r\n                maxLength={this.state.ipfs ? 500 : 60}\r\n                fluid\r\n                placeholder=\"Enter your messsage\"\r\n                onChange={(e, { value }) =>\r\n                  this.setState({ postMessage: value })\r\n                }\r\n              />\r\n              {!this.state.ipfs && (\r\n                <Message\r\n                  error\r\n                  content=\"Cannot connect to IPFS Node. Posts are limited to 60 characters.\"\r\n                />\r\n              )}\r\n              <Message warning>\r\n                <p>\r\n                  Your wallet will prompt you for transaction confirmation.\r\n                  Verify transaction amount is 0 and to address is your own. The\r\n                  data input will be a hex encode of your post.\r\n                </p>\r\n                <p>\r\n                  After confirming in your wallet, the transaction may take some\r\n                  time to finalize on the blockchain based on network\r\n                  conditions. You can refresh from the header icon when your\r\n                  wallet notifies you of successful posting.\r\n                </p>\r\n              </Message>\r\n            </Modal.Description>\r\n          </Modal.Content>\r\n          <Modal.Actions>\r\n            <Button\r\n              negative\r\n              content=\"Cancel\"\r\n              onClick={() =>\r\n                this.setState({ addModalOpen: false, postMessage: \"\" })\r\n              }\r\n            />\r\n            <Button\r\n              content=\"Post\"\r\n              labelPosition=\"right\"\r\n              icon=\"checkmark\"\r\n              positive\r\n              disabled={this.state.postMessage ? false : true}\r\n              onClick={this.onClickPostToMetamask.bind(this)}\r\n            />\r\n          </Modal.Actions>\r\n        </Modal>\r\n        <Modal open={this.state.ipfsModalOpen}>\r\n          <Modal.Header>Set IPFS Node</Modal.Header>\r\n          <Modal.Content>\r\n            <Modal.Description>\r\n              <Input\r\n                fluid\r\n                value={this.state.ipfsHost}\r\n                onChange={(e, { value }) =>\r\n                  this.setState({ ipfsHost: value })\r\n                }\r\n              />\r\n            </Modal.Description>\r\n          </Modal.Content>\r\n          <Modal.Actions>\r\n            <Button\r\n              negative\r\n              content=\"Cancel\"\r\n              onClick={() => this.setState({ ipfsModalOpen: false })}\r\n            />\r\n            <Button\r\n              disabled={\r\n                this.state.ipfsHost &&\r\n                (this.state.ipfsHost.startsWith(\"http://\") ||\r\n                  this.state.ipfsHost.startsWith(\"https://\"))\r\n                  ? false\r\n                  : true\r\n              }\r\n              content=\"Save\"\r\n              labelPosition=\"right\"\r\n              icon=\"checkmark\"\r\n              positive\r\n              onClick={() => {\r\n                localStorage.setItem(\"ipfs\", this.state.ipfsHost);\r\n                window.location.reload();\r\n              }}\r\n            />\r\n          </Modal.Actions>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}