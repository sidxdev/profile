{"version":3,"sources":["components/FeedItem.js","components/Profile.js","App.js","reportWebVitals.js","index.js"],"names":["FeedItem","props","type","lazy","content","startsWith","state","text","lazyText","iconColor","a","this","axios","get","httpResponse","headers","search","setState","data","replace","ipfsResponse","Card","fluid","Content","description","extra","Label","attached","color","size","date","React","Component","Profile","id","localStorage","getItem","profileButtonDisable","feed","theme","connect","loadData","event","target","value","setItem","response","status","Array","isArray","result","filter","e","to","toLowerCase","input","v","i","findIndex","t","hash","map","hex","timeStamp","decodeURIComponent","substring","Date","parseInt","toLocaleString","reverse","Container","style","marginTop","Divider","hidden","Input","onChange","onChangeProfile","bind","label","action","Button","primary","disabled","icon","onClick","onClickProfileSave","placeholder","Group","item","App","document","body","classList","remove","add","className","Menu","fixed","compact","borderless","inverted","Item","header","position","onClickToggleTheme","name","onClickConnect","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9a24d889.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Card, Label } from \"semantic-ui-react\";\r\nimport axios from \"axios\";\r\n\r\nconst IPFS_GATEWAY = \"https://ipfs.io/ipfs/\";\r\n\r\nclass FeedItem extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    let type = \"text\";\r\n    let lazy = false;\r\n\r\n    if (this.props.content.startsWith(\"https://\")) {\r\n      type = \"https\";\r\n      lazy = true;\r\n    } else if (this.props.content.startsWith(\"ipfs://\")) {\r\n      type = \"ipfs\";\r\n      lazy = true;\r\n    }\r\n\r\n    this.state = {\r\n      text: true,\r\n      lazy,\r\n      type,\r\n      lazyText: \"loading...\",\r\n      iconColor: \"grey\",\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.state.lazy) {\r\n      switch (this.state.type) {\r\n        default:\r\n        case \"https\":\r\n          let httpResponse = await axios.get(this.props.content);\r\n          let httpContentType = httpResponse.headers[\"content-type\"];\r\n          if (httpContentType.search(\"text/plain\") >= 0) {\r\n            this.setState({\r\n              lazyText: httpResponse.data,\r\n              iconColor: \"red\",\r\n            });\r\n          }\r\n          break;\r\n        case \"ipfs\":\r\n          let ipfsResponse = await axios.get(\r\n            `${IPFS_GATEWAY}${this.props.content.replace(\"ipfs://\", \"\")}`\r\n          );\r\n          let ipfsContentType = ipfsResponse.headers[\"content-type\"];\r\n          if (ipfsContentType.search(\"text/plain\") >= 0) {\r\n            this.setState({\r\n              lazyText: ipfsResponse.data,\r\n              iconColor: \"teal\",\r\n            });\r\n          }\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Card fluid>\r\n        {this.state.lazy ? (\r\n          <Card.Content description={this.state.lazyText} />\r\n        ) : (\r\n          <Card.Content description={this.props.content} />\r\n        )}\r\n        <Card.Content extra>\r\n          {this.state.lazy && (\r\n            <Label\r\n              attached=\"top right\"\r\n              color={this.state.iconColor}\r\n              size=\"tiny\"\r\n            >\r\n              {this.state.type}{\" \"}\r\n            </Label>\r\n          )}\r\n          {this.props.date}\r\n        </Card.Content>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FeedItem;\r\n","import React from \"react\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  Container,\r\n  Divider,\r\n  Input,\r\n  Label,\r\n} from \"semantic-ui-react\";\r\nimport axios from \"axios\";\r\nimport FeedItem from \"./FeedItem\";\r\n\r\nfunction hexToUtf8(hex) {\r\n  return decodeURIComponent(\r\n    hex\r\n      .replace(/\\s+/g, \"\")\r\n      .replace(/[0-9a-f]{2}/g, \"%$&\")\r\n      .substring(2)\r\n  );\r\n}\r\n\r\nclass Profile extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    const id = localStorage.getItem(\"ID\");\r\n\r\n    this.state = {\r\n      id,\r\n      profileButtonDisable: true,\r\n      feed: [],\r\n      theme: \"light\",\r\n      connect: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadData(this.state.id);\r\n  }\r\n\r\n  onChangeProfile(event) {\r\n    this.setState({ profileButtonDisable: false, id: event.target.value });\r\n  }\r\n\r\n  onClickProfileSave() {\r\n    localStorage.setItem(\"ID\", this.state.id);\r\n    this.setState({ profileButtonDisable: true });\r\n    this.loadData(this.state.id);\r\n  }\r\n\r\n  async loadData(id) {\r\n    if (!id) return;\r\n\r\n    let response = await axios.get(\r\n      `https://api.polygonscan.com/api?module=account&action=txlist&address=${id}&startblock=1&endblock=99999999&sort=asc`\r\n    );\r\n\r\n    let data = response.data;\r\n\r\n    if (data.status !== \"1\" || !Array.isArray(data.result)) return;\r\n\r\n    let feed = data.result\r\n      .filter((e) => e.to.toLowerCase() === this.state.id.toLowerCase())\r\n      .filter((e) => e.input !== \"0x\")\r\n      .filter((v, i, a) => a.findIndex((t) => t.hash === v.hash) === i)\r\n      .map(({ hash, input, timeStamp }) => ({\r\n        hash,\r\n        content: hexToUtf8(input),\r\n        date: new Date(parseInt(timeStamp) * 1000).toLocaleString(),\r\n      }))\r\n      .reverse();\r\n\r\n    this.setState({ feed });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container style={{ marginTop: \"2.5em\" }}>\r\n        <Divider hidden />\r\n        <Input\r\n          value={this.state.id}\r\n          onChange={this.onChangeProfile.bind(this)}\r\n          fluid\r\n          label={<Label content=\"Profile\" />}\r\n          action={\r\n            <Button\r\n              primary\r\n              disabled={this.state.profileButtonDisable}\r\n              icon=\"save\"\r\n              onClick={this.onClickProfileSave.bind(this)}\r\n            />\r\n          }\r\n          placeholder=\"0x... address\"\r\n        />\r\n        <Divider hidden />\r\n        <Card.Group>\r\n          {this.state.feed.map((item) => (\r\n            <FeedItem key={item.hash} {...item} />\r\n          ))}\r\n        </Card.Group>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Profile;\r\n","import React from \"react\";\nimport { Menu } from \"semantic-ui-react\";\nimport Profile from \"./components/Profile\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      theme: \"light\",\n      connect: false,\n    };\n  }\n\n  onClickToggleTheme() {\n    if (this.state.theme === \"dark\") {\n      this.setState({ theme: \"light\" });\n      document.body.classList.remove(\"dark\")\n      document.body.classList.add(\"light\")\n    } else {\n      this.setState({ theme: \"dark\" });\n      document.body.classList.remove(\"light\")\n      document.body.classList.add(\"dark\")\n    }\n  }\n\n  onClickConnect() {\n    if (this.state.connect) {\n      this.setState({ connect: false });\n    } else {\n      this.setState({ connect: true });\n    }\n  }\n\n  render() {\n    return (\n      <div className={this.state.theme}>\n        <Menu\n          fixed=\"top\"\n          compact\n          borderless\n          inverted={this.state.theme === \"dark\"}\n        >\n          <Menu.Item header content=\"Profile\" />\n          <Menu.Item\n            position=\"right\"\n            icon={this.state.theme === \"dark\" ? \"moon\" : \"sun\"}\n            onClick={this.onClickToggleTheme.bind(this)}\n          />\n          <Menu.Item\n            name={this.state.connect ? \"Disconnect\" : \"Connect\"}\n            icon=\"power\"\n            onClick={this.onClickConnect.bind(this)}\n          />\n        </Menu>\n        <Profile theme={this.state.theme} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}