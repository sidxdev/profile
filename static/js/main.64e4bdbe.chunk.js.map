{"version":3,"sources":["components/FeedItem.js","components/Profile.js","App.js","reportWebVitals.js","index.js"],"names":["FeedItem","props","state","text","lazy","content","startsWith","lazyText","type","a","this","axios","get","response","headers","search","setState","data","Card","fluid","Content","description","extra","Icon","name","date","React","Component","Profile","id","localStorage","getItem","profileButtonDisable","feed","loadData","event","target","value","setItem","status","Array","isArray","result","filter","e","to","toLowerCase","input","v","i","findIndex","t","hash","map","hex","timeStamp","decodeURIComponent","replace","substring","Date","parseInt","toLocaleString","Container","Divider","hidden","Input","onChange","onChangeProfile","bind","label","Label","action","Button","primary","disabled","icon","onClick","onClickProfileSave","placeholder","Group","item","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.64e4bdbe.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Card, Icon } from \"semantic-ui-react\";\r\nimport axios from \"axios\";\r\n\r\nclass FeedItem extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      text: true,\r\n      lazy: this.props.content.startsWith(\"https://\"),\r\n      lazyText: \"loading...\",\r\n      type: \"\",\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.state.lazy) {\r\n      let response = await axios.get(this.props.content);\r\n      let contentType = response.headers[\"content-type\"];\r\n      if (contentType.search(\"text/plain\") >= 0) {\r\n        this.setState({ lazyText: response.data, type: \"download\" });\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Card fluid>\r\n        {this.state.lazy ? (\r\n          <Card.Content description={this.state.lazyText} />\r\n        ) : (\r\n          <Card.Content description={this.props.content} />\r\n        )}\r\n        <Card.Content extra>\r\n          {this.state.lazy && <Icon name={this.state.type} />}\r\n          {this.props.date}\r\n        </Card.Content>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FeedItem;\r\n","import React from \"react\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  Container,\r\n  Divider,\r\n  Input,\r\n  Label,\r\n} from \"semantic-ui-react\";\r\nimport axios from \"axios\";\r\nimport FeedItem from \"./FeedItem\";\r\n\r\nfunction hexToUtf8(hex) {\r\n  return decodeURIComponent(\r\n    hex\r\n      .replace(/\\s+/g, \"\")\r\n      .replace(/[0-9a-f]{2}/g, \"%$&\")\r\n      .substring(2)\r\n  );\r\n}\r\n\r\nclass Profile extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    const id = localStorage.getItem(\"ID\");\r\n\r\n    this.state = {\r\n      id,\r\n      profileButtonDisable: true,\r\n      feed: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadData(this.state.id);\r\n  }\r\n\r\n  onChangeProfile(event) {\r\n    this.setState({ profileButtonDisable: false, id: event.target.value });\r\n  }\r\n\r\n  onClickProfileSave() {\r\n    localStorage.setItem(\"ID\", this.state.id);\r\n    this.setState({ profileButtonDisable: true });\r\n    this.loadData(this.state.id);\r\n  }\r\n\r\n  async loadData(id) {\r\n    if (!id) return;\r\n\r\n    let response = await axios.get(\r\n      `https://api.polygonscan.com/api?module=account&action=txlist&address=${id}&startblock=1&endblock=99999999&sort=asc`\r\n    );\r\n\r\n    let data = response.data;\r\n\r\n    if (data.status !== \"1\" || !Array.isArray(data.result)) return;\r\n\r\n    let feed = data.result\r\n      .filter((e) => e.to.toLowerCase() === this.state.id.toLowerCase())\r\n      .filter((e) => e.input !== \"0x\")\r\n      .filter((v, i, a) => a.findIndex((t) => t.hash === v.hash) === i)\r\n      .map(({ hash, input, timeStamp }) => ({\r\n        hash,\r\n        content: hexToUtf8(input),\r\n        date: new Date(parseInt(timeStamp) * 1000).toLocaleString(),\r\n      }));\r\n\r\n    this.setState({ feed });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Divider hidden />\r\n        <Input\r\n          value={this.state.id}\r\n          onChange={this.onChangeProfile.bind(this)}\r\n          fluid\r\n          label={<Label content=\"Profile\" />}\r\n          action={\r\n            <Button\r\n              primary\r\n              disabled={this.state.profileButtonDisable}\r\n              icon=\"save\"\r\n              onClick={this.onClickProfileSave.bind(this)}\r\n            />\r\n          }\r\n          placeholder=\"0x... address\"\r\n        />\r\n        <Divider hidden />\r\n        <Card.Group>\r\n          {this.state.feed.map((item) => (\r\n            <FeedItem key={item.hash} {...item} />\r\n          ))}\r\n        </Card.Group>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Profile;\r\n","import Profile from \"./components/Profile\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Profile />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}